require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var inputContainer = [].concat(_toConsumableArray(document.querySelectorAll('.input-custom')));
var input = document.querySelector('.input__field--hoshi');

inputContainer.map(function (elem) {
	document.addEventListener('DOMContentLoaded', function () {
		elem.firstElementChild.value === "" ? elem.classList.remove('input--filled') : elem.classList.add('input--filled');

		elem.firstElementChild.addEventListener('blur', function () {
			elem.firstElementChild.value === "" ? elem.classList.remove('input--filled') : elem.classList.add('input--filled');
		});
	});
});
var inputSearch = document.querySelector('#input-search');
var xmlhttp = new XMLHttpRequest();
var url = "/api/test";
inputSearch.addEventListener('keyup', function () {
	if (inputSearch.value.length >= 1) {
		xmlhttp.onreadystatechange = function () {
			if (this.readyState == 4 && this.status == 200) {
				var myArr = JSON.parse(this.responseText);
				var inputValue = inputSearch.value;
				var myFunction = function myFunction() {
					myArr.map(function (elem) {
						if (elem.name.indexOf(inputValue) > -1) {
							document.querySelector("#searchResult").innerHTML = '\n\t\t\t\t\t\t\t<li class="pd-b1">\n                                <a class="text is-white is-capitalized" href="/definition?word=' + elem.name + '">' + elem.name + '</a>\n\t\t\t\t\t\t\t</li>';
						} else {
							console.log(elem);
							document.querySelector("#searchResult").innerHTML = '\n\t\t\t\t\t\t\t<li class="pd-b1">\n                                <a class="text is-white is-capitalized" href="/definition?word=' + elem.name + '">' + elem.name + '</a>\n\t\t\t\t\t\t\t</li>';
						}
					});
				};
				myFunction();
			}
		};
		xmlhttp.open("GET", url, true);
		xmlhttp.send();
	} else {
		document.querySelector("#searchResult").innerHTML = " ";
	}
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9mYWN0b3ItYnVuZGxlL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvdmlld3MvYXNzZXRzL2pzL2NvbXBvbmVudHMvY29tcG9uZW50cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUNBQSxJQUFJLDhDQUFxQixTQUFTLGdCQUFULENBQTBCLGVBQTFCLENBQXJCLEVBQUo7QUFDQSxJQUFJLFFBQVEsU0FBUyxhQUFULENBQXVCLHNCQUF2QixDQUFaOztBQUVBLGVBQWUsR0FBZixDQUFtQixVQUFDLElBQUQsRUFBVTtBQUM1QixVQUFTLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxZQUFNO0FBQ25ELE9BQUssaUJBQUwsQ0FBdUIsS0FBdkIsS0FBaUMsRUFBakMsR0FBc0MsS0FBSyxTQUFMLENBQWUsTUFBZixDQUFzQixlQUF0QixDQUF0QyxHQUErRSxLQUFLLFNBQUwsQ0FBZSxHQUFmLENBQW1CLGVBQW5CLENBQS9FOztBQUVBLE9BQUssaUJBQUwsQ0FBdUIsZ0JBQXZCLENBQXdDLE1BQXhDLEVBQWdELFlBQU07QUFDckQsUUFBSyxpQkFBTCxDQUF1QixLQUF2QixLQUFpQyxFQUFqQyxHQUFzQyxLQUFLLFNBQUwsQ0FBZSxNQUFmLENBQXNCLGVBQXRCLENBQXRDLEdBQStFLEtBQUssU0FBTCxDQUFlLEdBQWYsQ0FBbUIsZUFBbkIsQ0FBL0U7QUFDQSxHQUZEO0FBR0EsRUFORDtBQU9BLENBUkQ7QUFTQSxJQUFJLGNBQWMsU0FBUyxhQUFULENBQXVCLGVBQXZCLENBQWxCO0FBQ0EsSUFBSSxVQUFVLElBQUksY0FBSixFQUFkO0FBQ0EsSUFBSSxNQUFNLFdBQVY7QUFDQSxZQUFZLGdCQUFaLENBQTZCLE9BQTdCLEVBQXNDLFlBQU07QUFDM0MsS0FBSSxZQUFZLEtBQVosQ0FBa0IsTUFBbEIsSUFBNEIsQ0FBaEMsRUFBbUM7QUFDbEMsVUFBUSxrQkFBUixHQUE2QixZQUFZO0FBQ3hDLE9BQUksS0FBSyxVQUFMLElBQW1CLENBQW5CLElBQXdCLEtBQUssTUFBTCxJQUFlLEdBQTNDLEVBQWdEO0FBQy9DLFFBQUksUUFBUSxLQUFLLEtBQUwsQ0FBVyxLQUFLLFlBQWhCLENBQVo7QUFDQSxRQUFJLGFBQWEsWUFBWSxLQUE3QjtBQUNBLFFBQUksYUFBYSxTQUFiLFVBQWEsR0FBTTtBQUN0QixXQUFNLEdBQU4sQ0FBVSxVQUFDLElBQUQsRUFBVTtBQUNuQixVQUFJLEtBQUssSUFBTCxDQUFVLE9BQVYsQ0FBa0IsVUFBbEIsSUFBZ0MsQ0FBQyxDQUFyQyxFQUF3QztBQUN2QyxnQkFBUyxhQUFULENBQXVCLGVBQXZCLEVBQXdDLFNBQXhDLDJJQUUwRixLQUFLLElBRi9GLFVBRXdHLEtBQUssSUFGN0c7QUFJQSxPQUxELE1BS087QUFDTixlQUFRLEdBQVIsQ0FBWSxJQUFaO0FBQ0EsZ0JBQVMsYUFBVCxDQUF1QixlQUF2QixFQUF3QyxTQUF4QywySUFFMEYsS0FBSyxJQUYvRixVQUV3RyxLQUFLLElBRjdHO0FBSUE7QUFDRCxNQWJEO0FBY0EsS0FmRDtBQWdCQTtBQUNBO0FBQ0QsR0F0QkQ7QUF1QkEsVUFBUSxJQUFSLENBQWEsS0FBYixFQUFvQixHQUFwQixFQUF5QixJQUF6QjtBQUNBLFVBQVEsSUFBUjtBQUNBLEVBMUJELE1BMEJPO0FBQ04sV0FBUyxhQUFULENBQXVCLGVBQXZCLEVBQXdDLFNBQXhDLEdBQW9ELEdBQXBEO0FBQ0E7QUFFRCxDQS9CRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgaW5wdXRDb250YWluZXIgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmlucHV0LWN1c3RvbScpXTtcbnZhciBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dF9fZmllbGQtLWhvc2hpJyk7XG5cbmlucHV0Q29udGFpbmVyLm1hcCgoZWxlbSkgPT4ge1xuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuXHRcdGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQudmFsdWUgPT09IFwiXCIgPyBlbGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1maWxsZWQnKSA6IGVsZW0uY2xhc3NMaXN0LmFkZCgnaW5wdXQtLWZpbGxlZCcpO1xuXG5cdFx0ZWxlbS5maXJzdEVsZW1lbnRDaGlsZC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgKCkgPT4ge1xuXHRcdFx0ZWxlbS5maXJzdEVsZW1lbnRDaGlsZC52YWx1ZSA9PT0gXCJcIiA/IGVsZW0uY2xhc3NMaXN0LnJlbW92ZSgnaW5wdXQtLWZpbGxlZCcpIDogZWxlbS5jbGFzc0xpc3QuYWRkKCdpbnB1dC0tZmlsbGVkJyk7XG5cdFx0fSk7XG5cdH0pO1xufSk7XG5sZXQgaW5wdXRTZWFyY2ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5wdXQtc2VhcmNoJylcbmxldCB4bWxodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5sZXQgdXJsID0gXCIvYXBpL3Rlc3RcIjtcbmlucHV0U2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKCkgPT4ge1xuXHRpZiAoaW5wdXRTZWFyY2gudmFsdWUubGVuZ3RoID49IDEpIHtcblx0XHR4bWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmICh0aGlzLnJlYWR5U3RhdGUgPT0gNCAmJiB0aGlzLnN0YXR1cyA9PSAyMDApIHtcblx0XHRcdFx0bGV0IG15QXJyID0gSlNPTi5wYXJzZSh0aGlzLnJlc3BvbnNlVGV4dCk7XG5cdFx0XHRcdGxldCBpbnB1dFZhbHVlID0gaW5wdXRTZWFyY2gudmFsdWU7XG5cdFx0XHRcdGxldCBteUZ1bmN0aW9uID0gKCkgPT4ge1xuXHRcdFx0XHRcdG15QXJyLm1hcCgoZWxlbSkgPT4ge1xuXHRcdFx0XHRcdFx0aWYgKGVsZW0ubmFtZS5pbmRleE9mKGlucHV0VmFsdWUpID4gLTEpIHtcblx0XHRcdFx0XHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzZWFyY2hSZXN1bHRcIikuaW5uZXJIVE1MID0gYFxuXHRcdFx0XHRcdFx0XHQ8bGkgY2xhc3M9XCJwZC1iMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInRleHQgaXMtd2hpdGUgaXMtY2FwaXRhbGl6ZWRcIiBocmVmPVwiL2RlZmluaXRpb24/d29yZD0ke2VsZW0ubmFtZX1cIj4ke2VsZW0ubmFtZX08L2E+XG5cdFx0XHRcdFx0XHRcdDwvbGk+YFxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZWxlbSlcblx0XHRcdFx0XHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzZWFyY2hSZXN1bHRcIikuaW5uZXJIVE1MID0gYFxuXHRcdFx0XHRcdFx0XHQ8bGkgY2xhc3M9XCJwZC1iMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInRleHQgaXMtd2hpdGUgaXMtY2FwaXRhbGl6ZWRcIiBocmVmPVwiL2RlZmluaXRpb24/d29yZD0ke2VsZW0ubmFtZX1cIj4ke2VsZW0ubmFtZX08L2E+XG5cdFx0XHRcdFx0XHRcdDwvbGk+YFxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdH1cblx0XHRcdFx0bXlGdW5jdGlvbigpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0eG1saHR0cC5vcGVuKFwiR0VUXCIsIHVybCwgdHJ1ZSk7XG5cdFx0eG1saHR0cC5zZW5kKCk7XG5cdH0gZWxzZSB7XG5cdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzZWFyY2hSZXN1bHRcIikuaW5uZXJIVE1MID0gXCIgXCJcblx0fVxuXG59KVxuXG5cblxuXG5cblxuXG5cbiJdfQ==
